{"version":3,"sources":["logo.svg","components/charts/ChartJobs.js","components/StartPage.js","components/pageComponents/Header.js","components/charts/ChartChemicalsDelivered.js","components/charts/ChartChemicalsDispatched.js","components/Chemicals.js","components/charts/ChartWarehouse.js","components/Warehouses.js","components/TabStyle.js","components/datePicker/context/datepickerContext.js","components/datePicker/Day.js","components/datePicker/utils/getColor.js","components/datePicker/Month.js","components/datePicker/NavButton.js","components/datePicker/DatePicker.js","components/Accordion.js","components/Search.js","components/pageComponents/Aside.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ChartJobs","props","useState","chartState","console","log","useEffect","chartConfig","type","data","labels","datasets","label","dates","borderWidth","pointStyle","pointRadius","pointBackgroundColor","fill","options","scales","xAxes","time","unit","stepSize","displayFormat","tooltipFormat","ticks","major","enabled","fontStyle","fontSize","yAxes","beginAtZero","chartContainer","useRef","chartInstance","setChartInstance","datasetIndex","newData","config","update","current","newChartInstance","Chartjs","ref","StartPage","alerts","setAlerts","jobsDone","setJobDone","allJobsDone","setAllJobsDone","isFetching","a","axios","response","chemicalCounterSite1","chemicalCounterSite2","forEach","warehouseStock","chemical","warehouse_id","amount","state","reason","site","findDuplicateDates","arra1","dateObject","result","date","item","push","t","Date","y","jobs","dateArray","map","job","index","getFullYear","parseInt","getMonth","getDate","fetchJobs","fetchWarehouseStock","value","selectLabels","getAlerts","alert","i","className","key","getValue","selectValue","jobsThisMonth","filter","jobDate","currDate","currWeek","curr","week","first","getDay","day","setDate","toISOString","slice","calculateWeek","jobsThisWeek","includes","onChange","e","currentTarget","Header","toLocaleString","name","user","ChartChemicalsDelivered","total","Object","values","pop","letters","keys","backgroundColor","borderColor","legend","display","position","fontColor","title","text","layout","padding","left","right","top","bottom","updateDataset","ChartChemicalsDispatched","Chemicals","selectLabelsDelivered","selectLabelsDispatched","deliveryForChart","setDeliveryForChart","dispatchForChart","setDispatchForChart","dispatchedByTypes","setDispatchedByTypes","deliveredByTypes","setDeliveredByTypes","incoming","today","A","B","C","month","dispatched","jobItem","desc","fetchjobItems","selectedValue","length","constructor","ChartWarehouse","chemicalInventory","warehouse","id","Warehouses","warehouses","setWarehouses","isLoading","setLoading","fetchData","stockObj","stock","temp","Tabs","styled","div","Tab","button","active","Content","React","createContext","focusedDate","isDateFocused","isDateSelected","isDateHovered","isDateBlocked","isFirstOrLastSelectedDate","onDateFocus","onDateHover","onDateSelect","Day","dayLabel","dayRef","useContext","DatepickerContext","useDay","isSelected","isSelectedStartOrEnd","isWithinHoverRange","disabledDate","onClick","onKeyDown","onMouseEnter","tabIndex","getColorFn","isDisabled","selectedFirstOrLastColor","normalColor","selectedColor","rangeHoverColor","disabledColor","getColor","css","margin","border","color","background","Month","year","firstDayOfWeek","useMonth","days","weekdayLabels","monthLabel","textAlign","gridTemplateColumns","justifyContent","marginBottom","toString","NavButton","children","outline","width","Datepicker","forwardRef","startDate","endDate","focusedInput","START_DATE","setState","cleanValue","useImperativeHandle","useDatepicker","onDatesChange","activeMonths","goToPreviousMonths","goToNextMonths","Provider","gridGap","Accordion","isOpen","setOpen","Search","setActive","handleClick","target","site2DataTotal","setSite2DataTotal","site1DataTotal","setSite1DataTotal","site2DetailedData","setSite2DetailedData","site1DetailedData","setSite1DetailedData","searchDates","setSearchDates","site1ForDisplay","setSite1ForDisplay","site2ForDisplay","setSite2ForDisplay","error","setError","detailedData","action","ticket","renderTableHeader","toUpperCase","sortByWarehouse","sortedByWarehouse","sort","b","sortByDate","sortedByDate","dateA","dateB","sortByChemical","sortedByChemical","sortByJobType","filteredByJobType","handleSearchDates","clearFilters","site1Data","site2Data","site1ACounter","site1BCounter","site1CCounter","site2ACounter","site2BCounter","site2CCounter","site_id","filteredDatesSite1","moment","isBetween","filteredDatesSite2","Aside","to","exact","activeClassName","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7f269409.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Chartjs from \"chart.js\";\r\n\r\nconst ChartJobs = (props) => {\r\n  const [chartState, setChartState] = useState(props);\r\n  console.log(props);\r\n  console.log(chartState);\r\n\r\n  useEffect(() => {\r\n    console.log(chartState);\r\n  }, [chartState]);\r\n\r\n  const chartConfig = {\r\n    type: \"line\",\r\n    data: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: `Jobs completes`,\r\n          data: props.dates,\r\n          borderWidth: 5,\r\n          pointStyle: \"triangle\",\r\n          pointRadius: \"10\",\r\n          pointBackgroundColor: \"#ec6b56\",\r\n          fill: false\r\n        },\r\n      ],\r\n      pointStyle: \"triangle\",\r\n    },\r\n    options: {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            type: \"time\",\r\n            time: {\r\n              unit: \"day\",\r\n              stepSize: 1,\r\n              displayFormat: \"DD/MM/YY\",\r\n              tooltipFormat: \"DD/MM/YY\",\r\n            },\r\n            ticks: {\r\n              major: {\r\n                enabled: true,\r\n                fontStyle: \"bold\",\r\n                fontSize: 14,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  console.log(\"start create chart\");\r\n  const chartContainer = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  console.log(chartInstance);\r\n  const updateDataset = (datasetIndex, newData) => {\r\n    if (chartInstance) {\r\n      chartInstance.config.data.datasets[datasetIndex].data = newData;\r\n      chartInstance.update();\r\n    }\r\n  };\r\n\r\n  updateDataset(0, props.dates);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={chartContainer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartJobs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ChartJobs from \"./charts/ChartJobs\";\r\nimport \"../css/startPage.css\";\r\nimport axios from 'axios'\r\n\r\nexport default function StartPage() {\r\n  const [alerts, setAlerts] = useState({alerts: [ ]});\r\n  const [jobsDone, setJobDone] = useState()\r\n  const [ allJobsDone, setAllJobsDone ] = useState()\r\n\r\n\r\n  const calculateWeek = () => {\r\n    let curr = new Date()\r\n    let week = []\r\n\r\n    for (let i = 1; i <= 7; i++) {\r\n      let first = curr.getDate() - curr.getDay() + i \r\n      let day = new Date(curr.setDate(first)).toISOString().slice(0, 10)\r\n      week.push(day)\r\n    }\r\n    return week\r\n  }\r\n\r\n  useEffect(() => {\r\n    let isFetching = true\r\n   const fetchJobs = async () => {\r\n      console.log('fetch jobs')\r\n      const jobs = await axios('http://localhost/job')\r\n      console.log(jobs.data)\r\n      let dateArray = jobs.data.map((job, index)=> {\r\n        let date = new Date(job.date)\r\n        date = date.getFullYear()+ '-'+(parseInt(date.getMonth())+1) + '-' + date.getDate()\r\n        return date\r\n      })\r\n      \r\n      function findDuplicateDates(arra1) {\r\n        let dateObject = {};\r\n        let result = []\r\n        arra1.forEach(item => {\r\n          console.log(item)\r\n          if(!dateObject[item])\r\n              dateObject[item] = 0;\r\n              dateObject[item] += 1;\r\n        })\r\n        console.log()\r\n        for(let date in dateObject){\r\n          result.push({t:new Date(date), y:dateObject[date]})\r\n        }\r\n        return result;        \r\n    }\r\n    dateArray = findDuplicateDates(dateArray)\r\n    console.log(dateArray)\r\n\r\n    if(isFetching){\r\n        setJobDone({dates:dateArray})\r\n        setAllJobsDone({dates:dateArray})\r\n     }\r\n    }\r\n\r\n    async function fetchWarehouseStock(){\r\n      const response = await axios('http://localhost/allstock')\r\n      // console.log(response.data)\r\n      let chemicalCounterSite1 = 0;\r\n      let chemicalCounterSite2 = 0;\r\n      response.data.forEach(warehouseStock => {\r\n        if(warehouseStock.chemical === 'A' && warehouseStock.warehouse_id <=5){\r\n          chemicalCounterSite1 = chemicalCounterSite1 + warehouseStock.amount\r\n        }\r\n        if(warehouseStock.chemical === 'A' && warehouseStock.warehouse_id > 5){\r\n          chemicalCounterSite2 = chemicalCounterSite2 + warehouseStock.amount\r\n        }\r\n        if(isFetching){\r\n          if(chemicalCounterSite2 >= 15){\r\n            setAlerts(state => [...state, {reason: \"More than 15 A\", site: \"2\"}])\r\n          }\r\n          if(chemicalCounterSite1 >= 15){\r\n            setAlerts(state => [...state, {reason: \"More than 15 A\", site: \"1\"}])\r\n          }\r\n        }\r\n      })\r\n      console.log('fetch stock for alert level')\r\n\r\n    }\r\n    fetchJobs()\r\n    fetchWarehouseStock()\r\n    return () => isFetching = false\r\n  },[])\r\n  // console.log(alerts.alerts);\r\n  \r\n \r\n\r\n  const [selectLabels, setselectLabels] = useState([\r\n    { label: \"Total\", value: \"total\" },\r\n    { label: \"This week\", value: \"week\" },\r\n    { label: \"This month\", value: \"month\" },\r\n  ]);\r\n\r\n  //by default last 6 days are shown, on select can change to a month\r\n\r\n  const getAlerts = alerts.alerts.map((alert, i) => (\r\n    <div className=\"notification\" key={i}>\r\n      <p className=\"notify\"> </p>\r\n      {alert.reason} at site #{alert.site}\r\n    </div>\r\n  ));\r\n\r\n \r\n  const getValue = (selectValue) => {\r\n    console.log(selectValue);\r\n    if (selectValue === \"month\") {\r\n      console.log(jobsDone)\r\n      const jobsThisMonth = allJobsDone.dates.filter(job => {\r\n        console.log(job)\r\n        const jobDate = new Date(job.t).getMonth()\r\n        const currDate = new Date().getMonth()\r\n        console.log(currDate, jobDate)\r\n        if(jobDate === currDate){\r\n          console.log('matches')\r\n          return job\r\n        }\r\n      \r\n      })\r\n      console.log(jobsThisMonth)\r\n      setJobDone({dates:jobsThisMonth})     \r\n\r\n    } else if(selectValue === \"week\") {\r\n      let currWeek = calculateWeek()\r\n      let jobsThisWeek = allJobsDone.dates.filter( job => {\r\n        // console.log(job.t, currWeek)\r\n        if(currWeek.includes(new Date(job.t).toISOString().slice(0,10))){\r\n          return job\r\n        }\r\n      })\r\n      setJobDone({dates:jobsThisWeek})\r\n    }else{\r\n      setJobDone(allJobsDone);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1> Completed Jobs</h1>\r\n        <div className=\"container-start-page\">\r\n          <div className=\"alerts box\">\r\n            active alerts\r\n            {getAlerts}\r\n          </div>\r\n          <div className=\"jobs box\">\r\n            <select\r\n              value={selectLabels.value}\r\n              onChange={(e) => getValue(e.currentTarget.value)}\r\n            >\r\n              {selectLabels.map(({ label, value }) => (\r\n                <option key={value} value={value}>\r\n                  {label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            {jobsDone? <ChartJobs {...jobsDone} />: null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Header() {\r\n  let date = new Date().toLocaleString();\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"Admin\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-header\">\r\n        <h3> Hello {user.name}</h3>\r\n        <p className=\"currentTime\">{date}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Chartjs from \"chart.js\";\r\n\r\nconst ChartChemicalsDelivered = (props) => {\r\n  const [chartState, setChartState] = useState(props);\r\n\r\n  console.log(props);\r\n  // console.log(chartState);\r\n\r\n  useEffect(() => {\r\n    console.log(chartState);\r\n  }, [chartState]);\r\n\r\n  let total = Object.values(props).pop();\r\n  console.log(total);\r\n  const letters = Object.keys(props);\r\n  const values = Object.values(props);\r\n  console.log(letters);\r\n  letters.pop();\r\n  letters.pop();\r\n  values.pop();\r\n  values.pop();\r\n  console.log(letters, values);\r\n\r\n  const chartConfig = {\r\n    type: \"pie\",\r\n    data: {\r\n      labels: letters,\r\n      datasets: [\r\n        {\r\n          label: `Total`,\r\n          data: values,\r\n          backgroundColor: [\r\n            '#ec6b56',\r\n            '#FFc154',\r\n            '#47b39c',\r\n          ],\r\n          borderColor: [\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      legend: {\r\n        display: true,\r\n        position: \"left\",\r\n        labels: {\r\n          fontColor: \"rgb(255, 99, 132)\",\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Total ${total} ku`,\r\n      },\r\n      layout: {\r\n        padding: {\r\n          left: 50,\r\n          right: 0,\r\n          top: 0,\r\n          bottom: 0,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartContainer = useRef(null);\r\n\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  const updateDataset = (datasetIndex, newData, total) => {\r\n    if (chartInstance) {\r\n      chartInstance.config.data.datasets[datasetIndex].data = newData;\r\n      chartInstance.config.options.title.text = `Total ${total} ku`;\r\n      chartInstance.update();\r\n    }\r\n  };\r\n  updateDataset(0, values, total);\r\n  console.log(chartInstance);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={chartContainer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartChemicalsDelivered;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Chartjs from \"chart.js\";\r\n\r\nconst ChartChemicalsDispatched = (props) => {\r\n  const [chartState, setChartState] = useState(props);\r\n\r\n  console.log(props);\r\n  // console.log(chartState);\r\n\r\n  useEffect(() => {\r\n    console.log(chartState);\r\n  }, [chartState]);\r\n\r\n  let total = Object.values(props).pop();\r\n  console.log(total);\r\n  const letters = Object.keys(props);\r\n  const values = Object.values(props);\r\n  console.log(letters);\r\n  letters.pop();\r\n  letters.pop();\r\n  values.pop();\r\n  values.pop();\r\n  console.log(letters, values);\r\n\r\n  const chartConfig = {\r\n    type: \"pie\",\r\n    data: {\r\n      labels: letters,\r\n      datasets: [\r\n        {\r\n          label: `Total`,\r\n          data: values,\r\n          backgroundColor: [\r\n              '#ec6b56',\r\n              '#FFc154',\r\n              '#47b39c',\r\n            ],\r\n            borderColor: [\r\n              \"#fff\",\r\n              \"#fff\",\r\n              \"#fff\",\r\n            ],\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      legend: {\r\n        display: true,\r\n        position: \"left\",\r\n        labels: {\r\n          fontColor: \"rgb(255, 99, 132)\",\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Total ${total} ku`,\r\n      },\r\n      layout: {\r\n        padding: {\r\n          left: 50,\r\n          right: 0,\r\n          top: 0,\r\n          bottom: 0,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartContainer = useRef(null);\r\n\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  const updateDataset = (datasetIndex, newData, total) => {\r\n    if (chartInstance) {\r\n      chartInstance.config.data.datasets[datasetIndex].data = newData;\r\n      chartInstance.config.options.title.text = `Total ${total} ku`;\r\n      chartInstance.update();\r\n    }\r\n  };\r\n  updateDataset(0, values, total);\r\n  console.log(chartInstance);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={chartContainer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartChemicalsDispatched;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/chemicals.css\";\r\nimport ChartChemicalsDelivered from \"./charts/ChartChemicalsDelivered\";\r\nimport ChartChemicalsDispatched from \"./charts/ChartChemicalsDispatched\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Chemicals() {\r\n  //preparing for fetch\r\n  // const [loading, setLoading] = useState(false);\r\n  const[ jobs, setJobs ] = useState()\r\n  const [selectLabelsDelivered, setselectLabelsDelivered] = useState([\r\n    { label: \"total\", value: \"total\" },\r\n    { label: \"today\", value: \"today\" },\r\n    { label: \"week\", value: \"week\" },\r\n    { label: \"month\", value: \"month\" },\r\n  ]);\r\n\r\n  const [selectLabelsDispatched, setSelectLabelsDispatched] = useState([\r\n    { label: \"total\", value: \"total\" },\r\n    { label: \"today\", value: \"today\" },\r\n    { label: \"week\", value: \"week\" },\r\n    { label: \"month\", value: \"month\" },\r\n  ]);\r\n\r\n  const [deliveryForChart, setDeliveryForChart] = useState({});\r\n\r\n  const [dispatchForChart, setDispatchForChart] = useState({});\r\n\r\n  const [dispatchedByTypes, setDispatchedByTypes] = useState([]);\r\n\r\n  const [deliveredByTypes, setDeliveredByTypes] = useState([]);\r\n\r\n  const getValueForDelivered = (selectedValue) => {\r\n    console.log(selectedValue);\r\n\r\n    // console.log({ deliveryForChart });\r\n    deliveredByTypes.forEach((deliveredByTypes) => {\r\n      if (selectedValue === deliveredByTypes.desc) {\r\n        console.log({ deliveryForChart });\r\n        console.log(deliveredByTypes);\r\n        setDeliveryForChart({\r\n          A: deliveredByTypes.A,\r\n          B: deliveredByTypes.B,\r\n          C: deliveredByTypes.C,\r\n          desc: deliveredByTypes.desc,\r\n          total: deliveredByTypes.total,\r\n        });\r\n        console.log({ deliveryForChart });\r\n      }\r\n    });\r\n  };\r\n\r\n  const getValueForDispatched = (selectedValue) => {\r\n    // console.log(selectedValue);\r\n    dispatchedByTypes.forEach((dispatchedByTypes) => {\r\n      if (selectedValue === dispatchedByTypes.desc) {\r\n        setDispatchForChart({\r\n          A: dispatchedByTypes.A,\r\n          B: dispatchedByTypes.B,\r\n          C: dispatchedByTypes.C,\r\n          desc: dispatchedByTypes.desc,\r\n          total: dispatchedByTypes.total,\r\n        });\r\n        console.log({ dispatchForChart });\r\n      }\r\n    });\r\n  };\r\n  const calculateWeek = () => {\r\n    let curr = new Date()\r\n    let week = []\r\n\r\n    for (let i = 1; i <= 7; i++) {\r\n      let first = curr.getDate() - curr.getDay() + i \r\n      let day = new Date(curr.setDate(first)).toISOString().slice(0, 10)\r\n      week.push(day)\r\n    }\r\n    return week\r\n  }\r\n  useEffect(() => {\r\n    let isFetching = true;\r\n    \r\n    const fetchjobItems = async () => {\r\n      const jobs = await axios('http://localhost/jobsWithJobItems')\r\n      \r\n      let incoming = {today:{A:0,B:0,C:0, total:0}, total:{A:0,B:0,C:0, total:0}, week:{A:0,B:0,C:0, total:0}, month:{A:0,B:0,C:0, total:0}}\r\n      let dispatched = {today:{A:0,B:0,C:0, total:0}, total:{A:0,B:0,C:0, total:0}, week:{A:0,B:0,C:0, total:0}, month:{A:0,B:0,C:0, total:0}}\r\n      let currDate = new Date().getDay()\r\n      let month = new Date().getMonth()\r\n      let currWeek = calculateWeek(new Date())\r\n\r\n      jobs.data.forEach(job => {\r\n        job.jobItem.forEach(item => {\r\n          let jobDate = new Date(job.date).toISOString().slice(0,10)\r\n            // console.log(item.chemical,':', item.amount, 'date:', job.date)\r\n            if(job.type === 'I'){\r\n              incoming.total[item.chemical] = parseInt(incoming.total[item.chemical]) + parseInt(item.amount)\r\n              incoming.total.total = parseInt(incoming.total.total) + parseInt(item.amount)\r\n            if(month === new Date(job.date).getMonth()){\r\n              incoming.month[item.chemical] = parseInt(incoming.month[item.chemical]) + parseInt(item.amount)\r\n              incoming.month.total = parseInt(incoming.month.total) + parseInt(item.amount)\r\n            }\r\n            if(currDate === new Date(job.date).getDay()){\r\n              incoming.today[item.chemical] = parseInt(incoming.today[item.chemical]) + parseInt(item.amount)\r\n              incoming.today.total = parseInt(incoming.today.total) + parseInt(item.amount)\r\n            }   \r\n            if(currWeek.includes(jobDate)){\r\n              incoming.week[item.chemical] = parseInt(incoming.week[item.chemical]) + parseInt(item.amount)\r\n              incoming.week.total = parseInt(incoming.week.total) + parseInt(item.amount)\r\n            }            \r\n          }\r\n\r\n          if(job.type === 'O'){\r\n              dispatched.total[item.chemical] = parseInt(dispatched.total[item.chemical]) + parseInt(item.amount)\r\n              dispatched.total.total = parseInt(dispatched.total.total) + parseInt(item.amount)\r\n            if(month === new Date(job.date).getMonth()){\r\n              dispatched.month[item.chemical] = parseInt(dispatched.month[item.chemical]) + parseInt(item.amount)\r\n              dispatched.month.total = parseInt(dispatched.month.total) + parseInt(item.amount)\r\n            }\r\n            if(currDate === new Date(job.date).getDay()){\r\n              dispatched.today[item.chemical] = parseInt(dispatched.today[item.chemical]) + parseInt(item.amount)\r\n              dispatched.today.total = parseInt(dispatched.today.total) + parseInt(item.amount)\r\n            }\r\n            if(currWeek.includes(jobDate)){\r\n              dispatched.week[item.chemical] = parseInt(dispatched.week[item.chemical]) + parseInt(item.amount)\r\n              dispatched.week.total = parseInt(dispatched.week.total) + parseInt(item.amount)\r\n            }\r\n          }\r\n          })\r\n      })\r\n      if(isFetching){\r\n        setDeliveredByTypes([\r\n          {A:incoming.today.A, B:incoming.today.B, C:incoming.today.C, desc:'today', total:incoming.today.total},\r\n          {A:incoming.total.A, B:incoming.total.B, C:incoming.total.C, desc:'total',total:incoming.total.total}, \r\n          {A:incoming.week.A, B:incoming.week.B, C:incoming.week.C, desc:'week', total:incoming.week.total},\r\n          {A:incoming.month.A, B:incoming.month.B, C:incoming.month.C, desc:'month', total:incoming.month.total}\r\n        ])\r\n        setDispatchedByTypes([\r\n          {A:dispatched.today.A, B:dispatched.today.B, C:dispatched.today.C, desc:'today', total:dispatched.today.total},\r\n          {A:dispatched.total.A, B:dispatched.total.B, C:dispatched.total.C, desc:'total',total:dispatched.total.total}, \r\n          {A:dispatched.week.A, B:dispatched.week.B, C:dispatched.week.C, desc:'week', total:dispatched.week.total},\r\n          {A:dispatched.month.A, B:dispatched.month.B, C:dispatched.month.C, desc:'month', total:dispatched.month.total}\r\n          \r\n        ])\r\n        setDeliveryForChart({\r\n          A: incoming.total.A,\r\n          B: incoming.total.B,\r\n          C: incoming.total.C,\r\n          desc:'total',\r\n          total: incoming.total.total})\r\n        setDispatchForChart({\r\n          A: dispatched.total.A,\r\n          B: dispatched.total.B,\r\n          C: dispatched.total.C,\r\n          desc:'total',\r\n          total: dispatched.total.total})\r\n      }\r\n      // console.log(incoming, dispatched)\r\n     }\r\n    fetchjobItems()\r\n    return () => isFetching = false\r\n    // console.log(deliveryForChart);\r\n  }, []); //deliveryForChart\r\n\r\n\r\nconsole.log(deliveredByTypes)\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1> All chemicals on sites</h1>\r\n        <div className=\"chemicals-container\">\r\n          <div className=\"deliver-container\">\r\n            <h2>Delivered</h2>\r\n            <select\r\n              value={selectLabelsDelivered.value}\r\n              onChange={(e) => getValueForDelivered(e.currentTarget.value)}\r\n            >\r\n              {selectLabelsDelivered.map(({ label, value }) => (\r\n                <option key={value} value={value}>\r\n                  {label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {Object.keys(deliveryForChart).length === 0 &&\r\n            deliveryForChart.constructor === Object ? (\r\n              <p>Loading</p>\r\n            ) : (\r\n              <ChartChemicalsDelivered {...deliveryForChart} />\r\n            )}\r\n          </div>\r\n          <div className=\"dispatch-container\">\r\n            <h2>Dispatched</h2>\r\n            <select\r\n              value={selectLabelsDispatched.value}\r\n              onChange={(e) => getValueForDispatched(e.currentTarget.value)}\r\n            >\r\n              {selectLabelsDispatched.map(({ label, value }) => (\r\n                <option key={value} value={value}>\r\n                  {label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {Object.keys(dispatchForChart).length === 0 &&\r\n            dispatchForChart.constructor === Object ? (\r\n              <p>Loading</p>\r\n            ) : (\r\n              <ChartChemicalsDispatched {...dispatchForChart} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Chartjs from \"chart.js\";\r\n\r\nconst ChartWarehouse = (props) => {\r\n  const [chartState, setChartState] = useState(props);\r\n\r\n  console.log('props', Object.keys(props.chemicalInventory));\r\n  // console.log(chartState);\r\n\r\n  const warehouse = props.id;\r\n  // console.log(warehouse);\r\n  const letters = Object.keys(props.chemicalInventory);\r\n  const values = Object.values(props.chemicalInventory);\r\n\r\n\r\n  console.log(letters, values);\r\n\r\n  const chartConfig = {\r\n    type: \"bar\",\r\n    data: {\r\n      labels: letters,\r\n      datasets: [\r\n        {\r\n          label: `Warehouse# ${warehouse}`,\r\n          data: values,\r\n          backgroundColor: [\r\n           '#47b39c',\r\n            '#FFc154',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  // console.log(\"start create chart\");\r\n  const chartContainer = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n\r\n  // console.log(chartContainer);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer]);\r\n\r\n  const updateDataset = (datasetIndex, newData) => {\r\n    chartInstance.data.datasets[datasetIndex].data = newData;\r\n    chartInstance.update();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={chartContainer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartWarehouse;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/warehouse.css\";\r\nimport axios from 'axios'\r\n\r\nimport ChartWarehouse from \"./charts/ChartWarehouse\";\r\n\r\n// (1st-10ku, 2nd-12ku, 3rd-5ku, 4th-3ku, 5th-9ku)\r\n\r\nexport default function Warehouses() {\r\n  const [warehouses, setWarehouses] = useState([])\r\n  const [isLoading, setLoading] = useState(true)\r\n  \r\n  useEffect(() =>{\r\n    let isFetching = true\r\n    const fetchData = async () => {\r\n    const response = await axios('http://localhost/warehouses')\r\n    \r\n    const warehouses = response.data\r\n    for await (let warehouse of warehouses){\r\n      console.log(warehouses)\r\n     warehouse.chemicalInventory = await fetchWarehouseStock(warehouse.id)\r\n    }\r\n    if(isFetching){\r\n      setWarehouses(warehouses)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  fetchData()\r\n    return () => isFetching = false\r\n},[])\r\n\r\nconsole.log(isLoading)\r\n\r\n\r\n  const fetchWarehouseStock = async (id) => {\r\n    const response = await axios(`http://localhost/currentstock/${id}`)\r\n    const warehouseStock = await response.data\r\n    let stockObj = {}\r\n    warehouseStock.map(stock => {\r\n            let temp ={}\r\n            temp[stock.chemical] = stock.amount\r\n            stockObj = {...temp, ...stockObj}\r\n            return temp\r\n        })\r\n        return stockObj\r\n}\r\nif(isLoading){\r\n  return(<div>Loading..</div>)\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1> Warehouse current stock</h1>\r\n      <h2>Site 1</h2>\r\n      <div className=\"warehouse-container\">\r\n        <div className=\"canvas-container\">\r\n          <ChartWarehouse {...warehouses[0]} />\r\n        </div>\r\n        <div className=\"canvas-container\">\r\n          <ChartWarehouse {...warehouses[1]} />\r\n        </div>\r\n        <div className=\"canvas-container\">\r\n          <ChartWarehouse {...warehouses[2]} />\r\n        </div>\r\n        <div className=\"canvas-container\">\r\n          <ChartWarehouse {...warehouses[3]} />\r\n        </div>\r\n        <div className=\"canvas-container\">\r\n          <ChartWarehouse {...warehouses[4]} />\r\n        </div>\r\n      </div>\r\n      <h2>Site 2</h2>\r\n      <div className=\"warehouse-container\">\r\n        <div className=\"canvas-container\">\r\n          <ChartWarehouse {...warehouses[5]} />\r\n        </div>\r\n        <div className=\"canvas-container\">\r\n          <ChartWarehouse {...warehouses[6]} />\r\n        </div>\r\n        <div className=\"canvas-container\">\r\n          <ChartWarehouse {...warehouses[7]} />\r\n        </div>\r\n        <div className=\"canvas-container\">\r\n          <ChartWarehouse {...warehouses[8]} />\r\n        </div>\r\n        <div className=\"canvas-container\">\r\n          <ChartWarehouse {...warehouses[9]} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nexport const Tabs = styled.div`\r\n  overflow: hidden;\r\n  background: #fff;\r\n  width:100%;\r\n  display:block;\r\n  margin:0 4%;\r\n  font-family: Open Sans;\r\n  height: 3em;\r\n`;\r\n\r\nexport const Tab = styled.button`\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  width: 45%;\r\n  margin:0 1%;\r\n  position: relative;\r\n  font-size: 1em;\r\n  border: ${(props) => (props.active ? \"1px solid #ccc\" : \"\")};\r\n  border-bottom: ${(props) => (props.active ? \"none\" : \"\")};\r\n  background-color: ${(props) => (props.active ? \"white\" : \"lightgray\")};\r\n  height: ${(props) => (props.active ? \"3em\" : \"2.6em; top:.4em\")};\r\n  transition: background-color 0.5s ease-in-out;\r\n  :hover {\r\n    background-color: white;\r\n  }\r\n`;\r\nexport const Content = styled.div`\r\n  ${(props) => (props.active ? \"\" : \"display:none\")}\r\n`;","import React from \"react\";\r\nexport const datepickerContextDefaultValue = {\r\n  focusedDate: null,\r\n  isDateFocused: () => false,\r\n  isDateSelected: () => false,\r\n  isDateHovered: () => false,\r\n  isDateBlocked: () => false,\r\n  isFirstOrLastSelectedDate: () => false,\r\n  onDateFocus: () => {},\r\n  onDateHover: () => {},\r\n  onDateSelect: () => {},\r\n};\r\nexport default React.createContext(datepickerContextDefaultValue)","/** @jsx jsx */\r\nimport { useRef, useContext } from \"react\";\r\nimport { useDay } from \"@datepicker-react/hooks\";\r\nimport { jsx } from \"@emotion/core\";\r\nimport DatepickerContext from \"./context/datepickerContext\";\r\nimport getColor from \"./utils/getColor\";\r\n\r\nfunction Day({ dayLabel, date }) {\r\n  const dayRef = useRef(null);\r\n  const {\r\n    focusedDate,\r\n    isDateFocused,\r\n    isDateSelected,\r\n    isDateHovered,\r\n    isDateBlocked,\r\n    isFirstOrLastSelectedDate,\r\n    onDateSelect,\r\n    onDateFocus,\r\n    onDateHover,\r\n  } = useContext(DatepickerContext);\r\n  const {\r\n    isSelected,\r\n    isSelectedStartOrEnd,\r\n    isWithinHoverRange,\r\n    disabledDate,\r\n    onClick,\r\n    onKeyDown,\r\n    onMouseEnter,\r\n    tabIndex,\r\n  } = useDay({\r\n    date,\r\n    focusedDate,\r\n    isDateFocused,\r\n    isDateSelected,\r\n    isDateHovered,\r\n    isDateBlocked,\r\n    isFirstOrLastSelectedDate,\r\n    onDateFocus,\r\n    onDateSelect,\r\n    onDateHover,\r\n    dayRef,\r\n  });\r\n\r\n  if (!dayLabel) {\r\n    return <div />;\r\n  }\r\n\r\n  const getColorFn = getColor(\r\n    isSelected,\r\n    isSelectedStartOrEnd,\r\n    isWithinHoverRange,\r\n    disabledDate\r\n  );\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      onKeyDown={onKeyDown}\r\n      onMouseEnter={onMouseEnter}\r\n      tabIndex={tabIndex}\r\n      type=\"button\"\r\n      ref={dayRef}\r\n      css={{\r\n        padding: \"8px\",\r\n        margin:'1%',\r\n        fontSize:'80%',\r\n        border: 0,\r\n        color: getColorFn({\r\n          selectedFirstOrLastColor: \"#FFFFFF\",\r\n          normalColor: \"#001217\",\r\n          selectedColor: \"#FFFFFF\",\r\n          rangeHoverColor: \"#FFFFFF\",\r\n          disabledColor: \"#808285\",\r\n        }),\r\n        background: getColorFn({\r\n          selectedFirstOrLastColor: \"#00aeef\",\r\n          normalColor: \"#FFFFFF\",\r\n          selectedColor: \"#71c9ed\",\r\n          rangeHoverColor: \"#71c9ed\",\r\n          disabledColor: \"#FFFFFF\",\r\n        }),\r\n      }}\r\n    >\r\n      {dayLabel}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Day;","export default function getColor(\r\n    isSelected,\r\n    isSelectedStartOrEnd,\r\n    isWithinHoverRange,\r\n    isDisabled\r\n  ) {\r\n    return ({\r\n      selectedFirstOrLastColor,\r\n      normalColor,\r\n      selectedColor,\r\n      rangeHoverColor,\r\n      disabledColor,\r\n    }) => {\r\n      if (isSelectedStartOrEnd) {\r\n        return selectedFirstOrLastColor;\r\n      } else if (isSelected) {\r\n        return selectedColor;\r\n      } else if (isWithinHoverRange) {\r\n        return rangeHoverColor;\r\n      } else if (isDisabled) {\r\n        return disabledColor;\r\n      } else {\r\n        return normalColor;\r\n      }\r\n    };\r\n  }","/** @jsx jsx */\r\nimport { useMonth } from \"@datepicker-react/hooks\";\r\nimport { jsx } from \"@emotion/core\";\r\nimport Day from \"./Day\";\r\n\r\nfunction Month({ year, month, firstDayOfWeek }) {\r\n  const { days, weekdayLabels, monthLabel } = useMonth({\r\n    year,\r\n    month,\r\n    firstDayOfWeek,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div css={{ textAlign: \"center\", margin: \"0 0 16px\" }}>\r\n        <strong>{monthLabel}</strong>\r\n      </div>\r\n      <div\r\n        css={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(7, 1fr)\",\r\n          justifyContent: \"center\",\r\n          marginBottom: \"10px\",\r\n          fontSize: \"15px\",\r\n          color: '#1B998B'\r\n        }}\r\n      >\r\n        {weekdayLabels.map((dayLabel) => (\r\n          <div css={{ textAlign: \"center\" }} key={dayLabel}>\r\n            {dayLabel}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        css={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(7, 1fr)\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {days.map((day, index) => {\r\n          if (typeof day === \"object\") {\r\n            return (\r\n              <Day\r\n                date={day.date}\r\n                key={day.date.toString()}\r\n                dayLabel={day.dayLabel}\r\n              />\r\n            );\r\n          }\r\n\r\n          return <div key={index} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Month;","/** @jsx jsx */\r\n\r\nimport { jsx } from \"@emotion/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { css } from \"@emotion/core\";\r\nexport default function NavButton({ children, onClick }) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={onClick}\r\n      css={{\r\n        outline:'none',\r\n        margin: '0 1rem 1rem',\r\n        padding: '1rem',      \r\n        border:'none',\r\n        width:'5rem',\r\n        backgroundColor: '#333745',\r\n        fontSize: '10px',\r\n        color: 'white',\r\n      }}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}","/** @jsx jsx */\r\n\r\nimport { jsx } from \"@emotion/core\";\r\nimport React, {\r\n  useState,\r\n  useRef,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\n// import { useDatepicker, START_DATE } from \"../node_modules/@datepicker-react/hooks\";\r\nimport { useDatepicker, START_DATE } from \"@datepicker-react/hooks\";\r\n// import { css } from \"emotion\";\r\nimport Month from \"./Month\";\r\nimport NavButton from \"./NavButton\";\r\nimport DatepickerContext from \"./context/datepickerContext\";\r\n\r\nconst Datepicker = forwardRef((props, ref) => {\r\n  const [state, setState] = useState({\r\n    startDate: null,\r\n    endDate: null,\r\n    focusedInput: START_DATE,\r\n  });\r\n  console.log({ props });\r\n\r\n  const cleanValue = () => {\r\n    setState({ startDate: null, endDate: null, focusedInput: START_DATE });\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      cleanValue: cleanValue,\r\n    };\r\n  });\r\n\r\n  const {\r\n    firstDayOfWeek,\r\n    activeMonths,\r\n    isDateSelected,\r\n    isDateHovered,\r\n    isFirstOrLastSelectedDate,\r\n    isDateBlocked,\r\n    isDateFocused,\r\n    focusedDate,\r\n    onDateHover,\r\n    onDateSelect,\r\n    onDateFocus,\r\n    goToPreviousMonths,\r\n    goToNextMonths,\r\n  } = useDatepicker({\r\n    startDate: state.startDate,\r\n    endDate: state.endDate,\r\n    focusedInput: state.focusedInput,\r\n    onDatesChange: handleDateChange,\r\n  });\r\n  function handleDateChange(data) {\r\n    if (!data.focusedInput) {\r\n      setState({ ...data, focusedInput: START_DATE });\r\n    } else {\r\n      setState(data);\r\n      console.log(data);\r\n    }\r\n    props.onChange(data);\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <DatepickerContext.Provider\r\n      value={{\r\n        focusedDate,\r\n        isDateFocused,\r\n        isDateSelected,\r\n        isDateHovered,\r\n        isDateBlocked,\r\n        isFirstOrLastSelectedDate,\r\n        onDateSelect,\r\n        onDateFocus,\r\n        onDateHover,\r\n      }}\r\n    >\r\n      {/* <div>\r\n        <strong>Start date: </strong>\r\n        {state.startDate && state.startDate.toLocaleString()}\r\n      </div>\r\n      <div>\r\n        <strong>End date: </strong>\r\n        {state.endDate && state.endDate.toLocaleString()}\r\n      </div> */}\r\n\r\n      <NavButton onClick={goToPreviousMonths}>Previous</NavButton>\r\n      <NavButton onClick={goToNextMonths}>Next</NavButton>\r\n      <div\r\n        css={{\r\n          display: \"grid\",\r\n          margin: \"0\",\r\n          gridTemplateColumns: `repeat(${activeMonths.length}, 1fr)`,\r\n          gridGap: \"0 64px\",\r\n        }}\r\n      >\r\n        {activeMonths.map((month) => (\r\n          <Month\r\n            key={`${month.year}-${month.month}`}\r\n            year={month.year}\r\n            month={month.month}\r\n            firstDayOfWeek={firstDayOfWeek}\r\n          />\r\n        ))}\r\n      </div>\r\n    </DatepickerContext.Provider>\r\n  );\r\n});\r\nexport default Datepicker;","import React from \"react\";\r\n\r\nconst Accordion = ({ title, children }) => {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <div className=\"accordion-wrapper\">\r\n      <div\r\n        className={`accordion-title ${isOpen ? \"open\" : \"\"}`}\r\n        onClick={() => setOpen(!isOpen)}\r\n      >\r\n        {title}\r\n      </div>\r\n      <div className={`accordion-item ${!isOpen ? \"collapsed\" : \"\"}`}>\r\n        <div className=\"accordion-content\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Accordion;","import React, { useState, useEffect, useRef } from \"react\";\r\n// import { Tabs, useTabState, usePanelState } from \"@bumaga/tabs\";\r\nimport { Tabs, Tab, Content } from \"./TabStyle\";\r\nimport \"../css/search.css\";\r\nimport Datepicker from \"./datePicker/DatePicker\";\r\nimport Accordion from \"./Accordion\";\r\nimport * as moment from \"moment\";\r\nimport axios from 'axios'\r\n\r\nexport default function Search() {\r\n  const [active, setActive] = useState(0);\r\n  const handleClick = (e) => {\r\n    const index = parseInt(e.target.id, 0);\r\n    if (index !== active) {\r\n      setActive(index);\r\n    }\r\n  };\r\n\r\n  const ref = useRef(null); \r\n  const [site2DataTotal, setSite2DataTotal] = useState({A:0, B:0, C:0})\r\n  const [site1DataTotal, setSite1DataTotal] = useState({A:0, B:0, C:0});\r\n  \r\n  const [site2DetailedData, setSite2DetailedData] = useState()\r\n  const [site1DetailedData, setSite1DetailedData] = useState();\r\n\r\n  const [searchDates, setSearchDates] = useState();\r\n  const [site1ForDisplay, setSite1ForDisplay] = useState()\r\n  const [site2ForDisplay, setSite2ForDisplay] = useState()\r\n\r\n  const [error, setError] = useState()\r\n  // console.log(site1DataTotal);\r\n\r\n  let detailedData = (site) => {\r\n    const detailedData=site.map((data, i) => {\r\n      return (\r\n        <div className=\"table-rows\" key={i}>\r\n          <p className=\"tabel-item\"> {data.chemical}</p>\r\n          <p className=\"tabel-item\"> {data.action}</p>\r\n          <p className=\"tabel-item\"> {data.date}</p>\r\n          <p className=\"tabel-item\"> {data.warehouse}</p>\r\n          <p className=\"tabel-item\"> {data.ticket}</p>\r\n        </div>\r\n      );\r\n    });\r\n    return detailedData\r\n  }\r\n\r\n  const renderTableHeader = (data) => {\r\n    console.log(data)\r\n    let header = Object.keys(data[0]);\r\n    return header.map((key, index) => {\r\n      return (\r\n        <p key={index} className=\"tabel-header\">\r\n          {key.toUpperCase()}\r\n        </p>\r\n      );\r\n    });\r\n  };\r\n\r\n  const sortByWarehouse = (site) => {\r\n    console.log('sort by warehouse')\r\n    const sortedByWarehouse = [...site].sort((a, b) => {\r\n      return a.warehouse - b.warehouse;\r\n    });\r\n    if(site === site1ForDisplay){\r\n      setSite1ForDisplay(sortedByWarehouse)\r\n    }else{\r\n      setSite2ForDisplay(sortedByWarehouse)\r\n    }\r\n  };\r\n\r\n  const sortByDate = (site) => {\r\n    console.log('sort by date')\r\n    const sortedByDate = [...site].sort((a, b) => {\r\n      let dateA = new Date(a.date),\r\n        dateB = new Date(b.date);\r\n      console.log(dateA, dateB)\r\n      return dateA - dateB;\r\n    });\r\n    console.log(sortedByDate)\r\n    if(site === site1ForDisplay){\r\n      setSite1ForDisplay(sortedByDate)\r\n    }else{\r\n      setSite2ForDisplay(sortedByDate)\r\n    }\r\n  };\r\n\r\n  const sortByChemical = (chemical, site) => {  \r\n      console.log('sort by chemical', chemical, site)\r\n    const sortedByChemical = [...site].filter(ticket => chemical === ticket.chemical) //chemical !== ticket.chemical\r\n    if(site === site1DetailedData){\r\n      console.log(sortedByChemical)\r\n      setSite1ForDisplay(sortedByChemical)\r\n    }else{\r\n      setSite2ForDisplay(sortedByChemical)\r\n    }\r\n  }\r\n  \r\n  const sortByJobType = (type, site) => {\r\n    console.log('sort by job type')\r\n    const filteredByJobType = [...site].filter(job => type === job.action)\r\n    console.log(filteredByJobType)\r\n    if(site === site1DetailedData){\r\n      setSite1ForDisplay(filteredByJobType)\r\n    }else{\r\n      setSite2ForDisplay(filteredByJobType)\r\n    }\r\n  }\r\n\r\n\r\n  function handleSearchDates(value) {\r\n    console.log(value);\r\n    setSearchDates(value);\r\n  }\r\n\r\n  const clearFilters = () => {\r\n    setSearchDates(null)\r\n    ref.current.cleanValue();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isFetching = true;\r\n    let site1Data = []\r\n    let site2Data = []\r\n    let site1ACounter = 0;\r\n    let site1BCounter = 0;\r\n    let site1CCounter = 0;\r\n    let site2ACounter = 0;\r\n    let site2BCounter = 0;\r\n    let site2CCounter = 0;\r\n    let action;\r\n    const fetchJobs = async () => {\r\n      const jobs = await axios('http://localhost/jobsWithJobItems')\r\n      console.log(jobs.data)\r\n      jobs.data.forEach(job => {\r\n        if(job.type === 'I'){\r\n          action = \"delivered\"\r\n        }else{\r\n          action = \"dispatched\"\r\n        }\r\n        let jobDate = new Date(job.date).toISOString().slice(0, 10)\r\n        // console.log(jobDate)\r\n        job.jobItem.forEach(jobItem => {\r\n          console.log(jobItem)\r\n          if(job.site_id === 2){\r\n            site2Data.push({chemical: jobItem.chemical, action, date: jobDate, warehouse: jobItem.warehouse_id, ticket:job.id })\r\n            if (jobItem.chemical === 'A'){\r\n              site2ACounter = site2ACounter + jobItem.amount;\r\n            }\r\n            if (jobItem.chemical === 'B'){\r\n              site2BCounter = site2BCounter + jobItem.amount;\r\n            }\r\n            if (jobItem.chemical === 'C'){\r\n              site2CCounter = site2CCounter + jobItem.amount;\r\n            }\r\n          \r\n          }else{\r\n            site1Data.push({chemical: jobItem.chemical, action, date: jobDate, warehouse: jobItem.warehouse_id, ticket:job.id })\r\n            if (jobItem.chemical === 'A'){\r\n              site1ACounter = site1ACounter + jobItem.amount;\r\n            }\r\n            if (jobItem.chemical === 'B'){\r\n              site1BCounter = site1BCounter + jobItem.amount;\r\n            }\r\n            if (jobItem.chemical === 'C'){\r\n              site1CCounter = site1CCounter + jobItem.amount;\r\n            }\r\n          }\r\n        })      \r\n      })\r\n      if(isFetching){\r\n        \r\n        setSite1DetailedData(site1Data)\r\n        setSite2DetailedData(site2Data)\r\n\r\n        setSite1ForDisplay(site1Data)\r\n        setSite2ForDisplay(site2Data)\r\n\r\n        setSite1DataTotal({A: site1ACounter, B:site1BCounter, C:site1CCounter})\r\n        setSite2DataTotal({A: site2ACounter, B:site2BCounter, C:site2CCounter})\r\n      }\r\n    }\r\n    if(!searchDates){\r\n      console.log('fetch')\r\n      fetchJobs()\r\n    }\r\n\r\n    console.log(searchDates);\r\n    if (searchDates && searchDates.endDate && site1DetailedData && site2DetailedData) {\r\n      console.log(searchDates);\r\n      let filteredDatesSite1 = site1ForDisplay.filter((item) => {\r\n        if (\r\n          moment(item.date).isBetween(\r\n            moment(searchDates.startDate),\r\n            moment(searchDates.endDate),\r\n            null,\r\n            '[]'\r\n          )\r\n        ) {\r\n          // console.log('yes')\r\n          return true;\r\n        } else {\r\n          // console.log('no')\r\n          return false;\r\n        }\r\n      });\r\n      let filteredDatesSite2 = site2ForDisplay.filter((item) => {\r\n        if (\r\n          moment(item.date).isBetween(\r\n            moment(searchDates.startDate),\r\n            moment(searchDates.endDate),\r\n            null,\r\n            '[]'\r\n          )\r\n        ) {\r\n          // console.log('yes')\r\n          return true;\r\n        } else {\r\n          // console.log('no')\r\n          return false;\r\n        }\r\n      });\r\n      if(filteredDatesSite1.length){\r\n        setError('')\r\n        setSite1ForDisplay(filteredDatesSite1);\r\n      }else{\r\n        setError('No jobs on those days')\r\n      }\r\n      if(filteredDatesSite2.length){\r\n        setError('')\r\n        setSite2ForDisplay(filteredDatesSite2);\r\n      }else{\r\n        setError('No jobs on those days')\r\n      }\r\n    }\r\n  }, [searchDates]);\r\n\r\n  //\r\n\r\n  \r\n    if(!site1ForDisplay || !site2ForDisplay){\r\n      return(<div>Loading...</div>)\r\n    }\r\n    console.log(site1DetailedData, site2DetailedData)\r\n    return (\r\n    <div>\r\n      {/* <h1>This is search page </h1>  */}\r\n      <div className={error ? ' errorAnim': null}>{error}</div>\r\n      <Tabs>\r\n        <Tab onClick={handleClick} active={active === 0} id={0}>\r\n          Site 1\r\n        </Tab>\r\n\r\n        <Tab onClick={handleClick} active={active === 1} id={1}>\r\n          Site 2\r\n        </Tab>\r\n      </Tabs> \r\n      <>\r\n     <Content active={active === 0}>\r\n          <h1>Site 1</h1>\r\n          <div className=\"total-container\">\r\n            <div className=\"total\">\r\n              <h2> Total Inventory:</h2>\r\n                <h3>A: {site1DataTotal.A}</h3>\r\n                <h3> B: {site1DataTotal.B}</h3>\r\n                <h3> C: {site1DataTotal.C}{\" \"}</h3>\r\n          </div>\r\n          <div className=\"buttonWrapper\">\r\n            <button onClick={clearFilters}>Clear all filters</button>\r\n            <button onClick={() => sortByWarehouse(site1ForDisplay)}>Sort by warehouse</button>\r\n            <button onClick={() => sortByDate(site1ForDisplay)}>Sort by date</button>\r\n            <button onClick={() => sortByChemical('A', site1DetailedData)}>Show all A chemicals</button>\r\n            <button onClick={() => sortByChemical('B', site1DetailedData)}>Show all B chemicals</button>\r\n            <button onClick={() => sortByChemical('C', site1DetailedData)}>Show all C chemicals</button>\r\n            <button onClick={() => sortByJobType('delivered', site1DetailedData)}>Show all delivered</button>\r\n            <button onClick={() => sortByJobType('dispatched', site1DetailedData)}>Show all dispatched</button>\r\n          </div>\r\n\r\n            <div>\r\n              <Accordion title=\"Search by date\">\r\n                <Datepicker\r\n                  value={searchDates}\r\n                  onChange={handleSearchDates}\r\n                  ref={ref}\r\n                />\r\n              </Accordion>\r\n            </div>\r\n\r\n            <div className=\"tickets\">\r\n              <div className=\"tableHeaders\">{renderTableHeader(site1ForDisplay)}</div>\r\n              \r\n              {detailedData(site1ForDisplay)}\r\n            </div>\r\n          </div>\r\n        </Content> \r\n         <Content active={active === 1}>\r\n         <h1>Site 2</h1>\r\n          <div className=\"total-container\">\r\n            <div className=\"total\">\r\n              <h2> Total amount:</h2>\r\n                <h3>A: {site2DataTotal.A}</h3>\r\n                <h3> B: {site2DataTotal.B}</h3>\r\n                <h3> C: {site2DataTotal.C}{\" \"}</h3>\r\n            </div>\r\n         \r\n\r\n          <div className=\"buttonWrapper\">\r\n            <button onClick={clearFilters}>Clear all filters</button>\r\n            <button onClick={() => sortByWarehouse(site2ForDisplay)}>Sort by warehouse</button>\r\n            <button onClick={() => sortByDate(site2ForDisplay)}>Sort by date</button>\r\n            <button onClick={() => sortByChemical('A', site2DetailedData)}>Show all A</button>\r\n            <button onClick={() => sortByChemical('B', site2DetailedData)}>Show all B</button>\r\n            <button onClick={() => sortByChemical('C', site2DetailedData)}>Show all C</button>\r\n            <button onClick={() => sortByJobType('delivered', site2DetailedData)}>Show all delivered</button>\r\n            <button onClick={() => sortByJobType('dispatched', site2DetailedData)}>Show all dispatched</button>\r\n          </div>\r\n\r\n            <div>\r\n              <Accordion title=\"Search by date\">\r\n                <Datepicker\r\n                  value={searchDates}\r\n                  onChange={handleSearchDates}\r\n                  ref={ref}\r\n                />\r\n              </Accordion>\r\n            </div>\r\n\r\n            <div>\r\n            <div className=\"tableHeaders\">{renderTableHeader(site2ForDisplay)}</div>\r\n              {detailedData(site2ForDisplay)}\r\n            </div>\r\n          </div>\r\n        </Content>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../../css/aside.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Chemicals from \"../Chemicals\";\r\nimport StartPage from \"../StartPage\";\r\nimport Warehouses from \"../Warehouses\";\r\nimport Statistic from \"../Statistic\";\r\nimport Search from \"../Search\";\r\n\r\nexport default function Aside() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav className=\"aside\">\r\n          <ul>\r\n              <NavLink to=\"/\" exact={true} activeClassName=\"active\">\r\n                Start page\r\n              </NavLink>\r\n              <NavLink to=\"/chemicals\" activeClassName=\"active\">\r\n                Chemicals\r\n              </NavLink>\r\n              <NavLink to=\"/warehouses\" activeClassName=\"active\">\r\n                Warehouses\r\n              </NavLink>\r\n              <NavLink to=\"/search\" activeClassName=\"active\">\r\n                Search\r\n              </NavLink>\r\n              {/* <NavLink to=\"/statistics\" activeClassName=\"active\">\r\n                Statistics\r\n              </NavLink> */}\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route path=\"/chemicals\">\r\n            <Chemicals />\r\n          </Route>\r\n          <Route path=\"/warehouses\">\r\n            <Warehouses />\r\n          </Route>\r\n          <Route path=\"/search\">\r\n            <Search />\r\n          </Route>\r\n          {/* <Route path=\"/statistics\">\r\n            <Statistic />\r\n          </Route> */}\r\n          <Route path=\"/\">\r\n            <StartPage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport StartPage from \"./components/StartPage\";\r\nimport Header from \"./components/pageComponents/Header\";\r\nimport Aside from \"./components/pageComponents/Aside\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Aside />\r\n      {/* <StartPage /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}